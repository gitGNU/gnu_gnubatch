.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "gbatch_open 3"
.TH gbatch_open 3 "2012-06-25" "GNUbatch Release 1" "GNUbatch Batch Scheduler"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
gbatch_open \- open a connection to GNUbatch
.PP
gbatch_login \- open a connection to GNUbatch with password
.PP
gbatch_wlogin \- open a connection to GBUbatch with a password mapping user
.PP
gbatch_locallogin \- open a connection on the local host
.PP
gbatch_locallogin_byid \- open a connection on the local host, specifying user id
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fB#include <gbatch.h>\fR
.PP
\&\fBint gbatch_open(const char *\fR\fIhostname\fR\fB, const char *\fR\fIservname\fR\fB)\fR
.PP
\&\fBint gbatch_open(const char *\fR\fIhostname\fR\fB, const char *\fR\fIservname\fR\fB,
const char *\fR\fIusername\fR\fB)\fR
.PP
\&\fBint gbatch_login(const char *\fR\fIhostname\fR\fB, const char *\fR\fIservname\fR\fB,
const char *\fR\fIusername\fR\fB, const char *\fR\fIpasswd\fR)>
.PP
\&\fBint gbatch_wlogin(const char *\fR\fIhostname\fR\fB, const char *\fR\fIservname\fR\fB,
const char *\fR\fIusername\fR\fB, const char *\fR\fIpasswd\fR)>
.PP
\&\fBint gbatch_locallogin(const char *\fR\fIservname\fR\fB, const char *\fR\fIusername\fRB)>
.PP
\&\fBint gbatch_locallogin_byid(const char *\fR\fIservname\fR\fB, const int_ugid_t\fR\fIuid\fRB)>
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBgbatch_open\fR opens a connection from a a Unix host to the specified server, or from a
predefined windows host set up in the hosts file, with the given user name, which must
be mapped to the correct Unix user name.
.PP
\&\fBgbatch_login\fR logs in with the given user name (mapped to a user name on the server
unless from a registered Unix host) and password.
.PP
\&\fBgbatch_wlogin\fR is as for \fBgbatch_login\fR, but the given user name is always mapped
even if the caller is a Unix server.
.PP
\&\fBgbatch_locallogin\fR logs in on the local host. If the user name is non-null, then this
will be used (if permitted) other than the effective uid.
.PP
\&\fBgbatch_locallogin_byid\fR takes a user id rather than a user name.
.PP
In all cases, \fIhostname\fR is the name of the host being connected to or null if the
local server is to be used.
.PP
\&\fIservname\fR may be \f(CW\*(C`NULL\*(C'\fR to use a standard service name, otherwise
an alternative service may be specified.
.PP
\&\fIpasswd\fR should be the Unix password on the server or an alternate
\&\fIinterface password\fR set up by \fIgbch\-passwd\fR\|(8).
If this is not required it may be nulls.
.PP
Note that more than one connection can be open at
any time with various combinations of user names and hosts.
.PP
When finished, close the conection with a call to \fIgbatch_close\fR\|(3).
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
The function a non-negative value if successful, which is the \fIfile
descriptor\fR used in various other calls, otherwise an error code as
defined in the include file \fIgbatch.h\fR.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 7
\& int fd;
\& fd = gbatch_open("myhost", (char *) 0);
\& if (fd < 0)  { /* handle error */
\& ...
\& }
\& ...
\& gbatch_close(fd)
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgbatch_close\fR\|(3),
\&\fIgbatch_newgrp\fR\|(3),
\&\fIgbatch_setqueue\fR\|(3),
\&\fIgbatch_jobmon\fR\|(3),
\&\fIgbatch_varmon\fR\|(3),
\&\fIgbch\-passwd\fR\|(8).
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2012 Free Software Foundation, Inc.
This is free software. You may redistribute copies of it under the
terms of the \s-1GNU\s0 General Public License
<http://www.gnu.org/licenses/gpl.html>.
There is \s-1NO\s0 \s-1WARRANTY\s0, to the extent permitted by law.
.PP
head1 \s-1AUTHOR\s0
.PP
John M Collins, Xi Software Ltd.
